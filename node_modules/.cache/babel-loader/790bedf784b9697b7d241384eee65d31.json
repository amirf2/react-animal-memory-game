{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst fireworks_1 = __importDefault(require(\"./fireworks\"));\n\nclass Fireworks extends React.Component {\n  constructor() {\n    super(...arguments);\n    this._ivl = 0;\n    this._idle = false;\n    this._ref = null;\n  }\n\n  render() {\n    return React.createElement('div', {\n      ref: ref => this._ref = ref,\n      className: 'react-fireworks'\n    });\n  }\n\n  componentDidMount() {\n    let self = this;\n    let interval = this.props.interval;\n\n    if (interval) {\n      this._ivl = window.setInterval(function () {\n        if (self._idle) return;\n        self.evaluate();\n      }, interval);\n      this.evaluate();\n    } else {\n      this.evaluate();\n    }\n  }\n\n  onIdle() {\n    this._idle = true;\n  }\n\n  componentWillUnmount() {\n    if (this._ivl) {\n      clearInterval(this._ivl);\n    }\n  }\n\n  evaluate() {\n    let _a = this.props,\n        count = _a.count,\n        calc = _a.calc,\n        interval = _a.interval,\n        props = __rest(_a, [\"count\", \"calc\", \"interval\"]);\n\n    let input = props;\n\n    if (!input.parentNode) {\n      if (this._ref) {\n        input.parentNode = this._ref;\n      }\n    }\n\n    for (let i = 0; i < (count || 1); i++) {\n      fireworks_1.default(calc ? calc(props, i) : input);\n    }\n  }\n\n}\n\nexports.Fireworks = Fireworks;\nexports.default = Fireworks;","map":null,"metadata":{},"sourceType":"script"}
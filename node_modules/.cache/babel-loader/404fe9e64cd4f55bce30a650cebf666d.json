{"ast":null,"code":"var _jsxFileName = \"C:\\\\boiling-meadow-62855\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport MemoryGame from './Components/MemoryGame';\nimport Settings from './Components/Settings';\nimport Sidebar from \"react-sidebar\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLevelChange = event => {\n      this.setState({\n        level: event.target.value\n      });\n    };\n\n    this.handleTypeChange = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.handleResetGame = event => {\n      console.log(\"hey i wash heree\");\n      this.setState({\n        game: () => React.createElement(MemoryGame, {\n          props: this.state.type,\n          level: this.state.level,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        })\n      });\n    };\n\n    this.state = {\n      sidebarOpen: false,\n      type: \"cats\",\n      level: \"hard\",\n      game: () => React.createElement(MemoryGame, {\n        props: this.state.type,\n        level: this.state.level,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({\n      sidebarOpen: open\n    });\n  }\n\n  render() {\n    const ActiveGame = this.state.game;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      sidebar: React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Settings\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Settings, {\n        handleLevelChange: this.handleLevelChange,\n        handleTypeChange: this.handleTypeChange,\n        handleResetGame: this.handleResetGame,\n        type: this.state.type,\n        level: this.state.level,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })),\n      open: this.state.sidebarOpen,\n      onSetOpen: this.onSetSidebarOpen,\n      styles: {\n        sidebar: {\n          background: \"DeepSkyBlue\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"image\",\n      src: \"/hamburger.png\",\n      alt: \"loading\",\n      onClick: () => this.onSetSidebarOpen(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(ActiveGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/boiling-meadow-62855/src/App.js"],"names":["React","Component","MemoryGame","Settings","Sidebar","App","constructor","props","handleLevelChange","event","setState","level","target","value","handleTypeChange","type","handleResetGame","console","log","game","state","sidebarOpen","onSetSidebarOpen","bind","open","render","ActiveGame","sidebar","background"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport MemoryGame from './Components/MemoryGame'\r\nimport Settings from './Components/Settings'\r\n\r\nimport Sidebar from \"react-sidebar\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n        sidebarOpen: false,\r\n        type: \"cats\",\r\n        level: \"hard\",\r\n        game: ()=> <MemoryGame props={this.state.type} level={this.state.level}/>\r\n    };\r\n    \r\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n  }\r\n\r\n  onSetSidebarOpen(open) {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n\r\n  handleLevelChange = (event) =>{\r\n    this.setState({level: event.target.value})\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({type: event.target.value})\r\n  }\r\n\r\n  handleResetGame = (event) => {\r\n    console.log(\"hey i wash heree\")\r\n    this.setState({game: ()=> <MemoryGame props={this.state.type} level={this.state.level}/>})\r\n  }\r\n\r\n  render(){\r\n\r\n    const ActiveGame = this.state.game;\r\n    return (\r\n      <div>\r\n        <Sidebar\r\n          sidebar={\r\n            <div className=\"container\">\r\n              <h3 className=\"text-center\"><b> Settings</b></h3>\r\n                <br/><br/>\r\n              <Settings handleLevelChange={this.handleLevelChange} handleTypeChange={this.handleTypeChange} handleResetGame={this.handleResetGame} type={this.state.type} level={this.state.level} />\r\n            </div>\r\n          }\r\n          open={this.state.sidebarOpen}\r\n          onSetOpen={this.onSetSidebarOpen}\r\n          styles={{ sidebar: { background: \"DeepSkyBlue\" }}}\r\n        >\r\n        <input type=\"image\" src=\"/hamburger.png\" alt=\"loading\" onClick={() => this.onSetSidebarOpen(true)} />\r\n      </Sidebar>\r\n        <ActiveGame/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
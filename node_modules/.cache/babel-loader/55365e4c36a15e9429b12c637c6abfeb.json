{"ast":null,"code":"import _objectSpread from \"C:\\\\react-animal-memory-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\react-animal-memory-game\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport MemoryGame from './Components/MemoryGame';\nimport Sidebar from './Components/Sidebar';\nimport { Fireworks } from 'fireworks/lib/react';\nimport { Fireworks2 } from 'fireworks-canvas';\nimport Canvas from 'react-native-canvas';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLevelChange = event => {\n      this.setState({\n        gameLevel: event.target.value\n      });\n    };\n\n    this.handleTypeChange = event => {\n      this.setState({\n        imageType: event.target.value\n      });\n    };\n\n    this.handleResetGame = event => {\n      this.setState({\n        game: () => React.createElement(MemoryGame, {\n          imageType: this.state.imageType,\n          gameLevel: this.state.gameLevel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })\n      });\n    };\n\n    this.handleCanvas = canvas => {\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'purple';\n      ctx.fillRect(0, 0, 100, 100);\n    };\n\n    this.state = {\n      sidebarOpen: false,\n      imageType: \"cats\",\n      gameLevel: \"hard\",\n      game: () => React.createElement(MemoryGame, {\n        imageType: this.state.imageType,\n        gameLevel: this.state.gameLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })\n    };\n  }\n\n  render() {\n    let fxProps = {\n      count: 3,\n      interval: 200,\n      colors: ['#cc3333', '#4CAF50', '#81C784'],\n      calc: (props, i) => _objectSpread({}, props, {\n        x: (i + 1) * (window.innerWidth / 3) - (i + 1) * 100,\n        y: 200 + Math.random() * 100 - 50 + (i === 2 ? -80 : 0)\n      })\n    };\n    const MemoryGame = this.state.game;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      handleLevelChange: this.handleLevelChange,\n      handleTypeChange: this.handleTypeChange,\n      handleResetGame: this.handleResetGame,\n      imageType: this.state.imageType,\n      gameLevel: this.state.gameLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(MemoryGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Canvas, {\n      ref: this.handleCanvas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/react-animal-memory-game/src/App.js"],"names":["React","Component","MemoryGame","Sidebar","Fireworks","Fireworks2","Canvas","App","constructor","props","handleLevelChange","event","setState","gameLevel","target","value","handleTypeChange","imageType","handleResetGame","game","state","handleCanvas","canvas","ctx","getContext","fillStyle","fillRect","sidebarOpen","render","fxProps","count","interval","colors","calc","i","x","window","innerWidth","y","Math","random"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport MemoryGame from './Components/MemoryGame'\r\nimport Sidebar from './Components/Sidebar'\r\nimport { Fireworks } from 'fireworks/lib/react'\r\nimport {Fireworks2} from 'fireworks-canvas'\r\nimport Canvas from 'react-native-canvas';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n        sidebarOpen: false,\r\n        imageType: \"cats\",\r\n        gameLevel: \"hard\",\r\n        game: () => <MemoryGame imageType={this.state.imageType} gameLevel={this.state.gameLevel}/>\r\n    };\r\n    \r\n  }\r\n\r\n  handleLevelChange = (event) =>{\r\n    this.setState({gameLevel: event.target.value})\r\n  }\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({imageType: event.target.value})\r\n  }\r\n\r\n  handleResetGame = (event) => {\r\n    this.setState({game: ()=> <MemoryGame imageType={this.state.imageType} gameLevel={this.state.gameLevel}/>})\r\n  }\r\n\r\n  handleCanvas = (canvas) => {\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'purple';\r\n    ctx.fillRect(0, 0, 100, 100);\r\n  }\r\n\r\n  render(){\r\n\r\n    let fxProps = {\r\n      count: 3,\r\n      interval: 200,\r\n      colors: ['#cc3333', '#4CAF50', '#81C784'],\r\n      calc: (props, i) => ({\r\n        ...props,\r\n        x: (i + 1) * (window.innerWidth / 3) - (i + 1) * 100,\r\n        y: 200 + Math.random() * 100 - 50 + (i === 2 ? -80 : 0)\r\n      })\r\n    }\r\n\r\n    const MemoryGame = this.state.game;\r\n\r\n    return (\r\n      <div  className=\"container\">\r\n        {/*send handlers and game info to sidebar*/}\r\n        <Sidebar\r\n          handleLevelChange={this.handleLevelChange} \r\n          handleTypeChange={this.handleTypeChange} \r\n          handleResetGame={this.handleResetGame} \r\n          imageType={this.state.imageType} \r\n          gameLevel={this.state.gameLevel} \r\n        />\r\n        <MemoryGame/>\r\n      <Canvas ref={this.handleCanvas}/>\r\n            </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
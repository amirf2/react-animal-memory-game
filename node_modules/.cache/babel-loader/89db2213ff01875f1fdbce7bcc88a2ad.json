{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Rocket = require('./components/Rocket.js');\n\nvar _Rocket2 = _interopRequireDefault(_Rocket);\n\nvar _Smoke = require('./components/Smoke.js');\n\nvar _Smoke2 = _interopRequireDefault(_Smoke);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MAX_PARTICLES = 400;\nvar FIRE_ROCKET_EVERY_MS = 400;\nvar REFRESH_EVERY_MS = 40;\nvar DEFAULT_BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.02)\";\n\nvar Fireworks = function (_Component) {\n  _inherits(Fireworks, _Component);\n\n  function Fireworks() {\n    _classCallCheck(this, Fireworks);\n\n    return _possibleConstructorReturn(this, (Fireworks.__proto__ || Object.getPrototypeOf(Fireworks)).apply(this, arguments));\n  }\n\n  _createClass(Fireworks, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var canvas = this.canvas;\n      var _props = this.props,\n          width = _props.width,\n          height = _props.height,\n          background = _props.background;\n      this.context = canvas.getContext('2d');\n      this.context.fillStyle = background ? background : DEFAULT_BACKGROUND_COLOR;\n      this.context.fillRect(0, 0, width + 'px', height + 'px');\n      var rockets = [],\n          particles = [];\n      this.launchInterval = window.setInterval(function () {\n        return rockets = _this2.launch.call(_this2, width, height, rockets);\n      }, FIRE_ROCKET_EVERY_MS);\n      this.loopInterval = window.setInterval(function () {\n        var _loop$call, _loop$call2;\n\n        return _loop$call = _this2.loop.call(_this2, width, height, rockets, particles), _loop$call2 = _slicedToArray(_loop$call, 2), rockets = _loop$call2[0], particles = _loop$call2[1], _loop$call;\n      }, REFRESH_EVERY_MS);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.clearInterval(this.launchInterval);\n      window.clearInterval(this.loopInterval);\n    }\n  }, {\n    key: 'shouldAddSmoke',\n    value: function shouldAddSmoke(rocket) {\n      var _rocket$getPosition = rocket.getPosition(),\n          _rocket$getPosition2 = _slicedToArray(_rocket$getPosition, 2),\n          x = _rocket$getPosition2[0],\n          y = _rocket$getPosition2[1];\n\n      return Math.random() < 0.6 ? [new _Smoke2.default(x, y, {\n        x: Math.random() * 1 - 0.5,\n        y: Math.random() * 0.01\n      }, 1.03, 1, -0.2, undefined, 0.01, true, 1, Math.random() * 0.03 + 0.02)] : [];\n    }\n  }, {\n    key: 'loop',\n    value: function loop(width, height, rockets, particles) {\n      var _this3 = this; // clear canvas\n\n\n      this.context.fillRect(0, 0, width, height);\n      var existingRockets = [];\n      var existingParticles = [].concat(_toConsumableArray(particles));\n      rockets.forEach(function (rocket) {\n        // update and render\n        rocket.update();\n        rocket.render(_this3.context);\n        existingParticles = [].concat(_toConsumableArray(existingParticles), _toConsumableArray(_this3.shouldAddSmoke(rocket))); // random chance of 1% if rockets is above the middle\n\n        var randomChance = rocket.y < height * 2 / 3 ? Math.random() * 100 <= 1 : false;\n        /* Explosion rules\n            - 80% of screen\n            - going down\n            - close to x, y position of rocket location\n            - 1% chance of random explosion\n        */\n\n        rocket.y < height / 5 || rocket.vel.y >= 0 || randomChance ? existingParticles = [].concat(_toConsumableArray(existingParticles), _toConsumableArray(rocket.explode())) : existingRockets.push(rocket);\n      }); //        let existingParticles = [];\n\n      existingParticles.forEach(function (particle) {\n        particle.update(); // render and save particles that can be rendered\n\n        if (particle.exists()) {\n          particle.render(_this3.context);\n          existingParticles.push(particle);\n        }\n      });\n\n      while (existingParticles.length > MAX_PARTICLES) {\n        existingParticles.shift();\n      }\n\n      return [existingRockets, existingParticles];\n    }\n  }, {\n    key: 'launch',\n    value: function launch(width, height, rockets) {\n      return this.launchFrom(width / 2, height, rockets);\n    }\n  }, {\n    key: 'launchFrom',\n    value: function launchFrom(x, y, rockets) {\n      var result = [].concat(_toConsumableArray(rockets));\n\n      if (result.length < 10) {\n        var rocket = new _Rocket2.default(x, y, {\n          x: Math.random() * 6 - 3,\n          y: Math.random() * -3 - 4\n        }, 0.999, 8, 0.01, Math.floor(Math.random() * 360 / 10) * 10);\n        result.push(rocket);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          style = _props2.style;\n      return _react2.default.createElement('canvas', {\n        ref: function ref(c) {\n          _this4.canvas = c;\n        },\n        width: width,\n        height: height,\n        style: style\n      });\n    }\n  }]);\n\n  return Fireworks;\n}(_react.Component);\n\nFireworks.propTypes = {\n  width: _propTypes2.default.number.isRequired,\n  height: _propTypes2.default.number.isRequired,\n  background: _propTypes2.default.string\n};\nexports.default = Fireworks;","map":null,"metadata":{},"sourceType":"script"}
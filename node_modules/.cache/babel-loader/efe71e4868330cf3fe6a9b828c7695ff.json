{"ast":null,"code":"export const shuffle = a => {\n  var j, x, i;\n\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n\n  return a;\n};\nexport const generateRandomNumbers = number => {\n  var randomNumbers = [];\n  var newNumber = 0;\n\n  while (number > 0) {\n    newNumber = Math.floor(Math.random() * 92);\n\n    if (!randomNumbers.includes(newNumber)) {\n      randomNumbers.push(newNumber);\n      number--;\n    }\n  }\n\n  randomNumbers = [...randomNumbers, ...randomNumbers];\n  shuffle(randomNumbers);\n  return randomNumbers;\n};","map":{"version":3,"sources":["C:/boiling-meadow-62855/src/utils.js"],"names":["shuffle","a","j","x","i","length","Math","floor","random","generateRandomNumbers","number","randomNumbers","newNumber","includes","push"],"mappings":"AACA,OAAO,MAAMA,OAAO,GAAIC,CAAD,IAAO;AAC5B,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV;;AACA,OAAKA,CAAC,GAAGH,CAAC,CAACI,MAAF,GAAW,CAApB,EAAuBD,CAAC,GAAG,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AAC/BF,IAAAA,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAJ;AACAD,IAAAA,CAAC,GAAGF,CAAC,CAACG,CAAD,CAAL;AACAH,IAAAA,CAAC,CAACG,CAAD,CAAD,GAAOH,CAAC,CAACC,CAAD,CAAR;AACAD,IAAAA,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAP;AACH;;AACD,SAAOF,CAAP;AACD,CATM;AAYP,OAAO,MAAMQ,qBAAqB,GAAIC,MAAD,IAAW;AAE9C,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,SAAS,GAAG,CAAhB;;AACA,SAAOF,MAAM,GAAG,CAAhB,EAAkB;AAChBE,IAAAA,SAAS,GAAGN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAZ;;AACA,QAAI,CAACG,aAAa,CAACE,QAAd,CAAuBD,SAAvB,CAAL,EAAuC;AACrCD,MAAAA,aAAa,CAACG,IAAd,CAAmBF,SAAnB;AACAF,MAAAA,MAAM;AACP;AACF;;AACDC,EAAAA,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAkB,GAAGA,aAArB,CAAhB;AACAX,EAAAA,OAAO,CAACW,aAAD,CAAP;AACA,SAAOA,aAAP;AACD,CAdM","sourcesContent":["\r\nexport const shuffle = (a) => {\r\n  var j, x, i;\r\n  for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n  }\r\n  return a;\r\n}\r\n\r\n\r\nexport const generateRandomNumbers = (number) =>{\r\n  \r\n  var randomNumbers = [];\r\n  var newNumber = 0;\r\n  while (number > 0){\r\n    newNumber = Math.floor(Math.random() * 92);\r\n    if (!randomNumbers.includes(newNumber)){\r\n      randomNumbers.push(newNumber);\r\n      number--;\r\n    }\r\n  }\r\n  randomNumbers = [...randomNumbers,...randomNumbers];\r\n  shuffle(randomNumbers);\r\n  return randomNumbers;\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Particle = function () {\n  function Particle() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var vel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      x: 0,\n      y: 0\n    };\n    var shrink = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.97;\n    var size = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n    var gravity = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    var color = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n    var resistance = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\n    var flick = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n    var alpha = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\n    var fade = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;\n\n    _classCallCheck(this, Particle);\n\n    this.x = x;\n    this.y = y;\n    this.vel = vel;\n    this.shrink = shrink;\n    this.size = size;\n    this.gravity = gravity;\n    this.color = color;\n    this.resistance = resistance;\n    this.flick = flick;\n    this.alpha = alpha;\n    this.fade = fade;\n  }\n\n  _createClass(Particle, [{\n    key: \"getPosition\",\n    value: function getPosition() {\n      return [this.x, this.y];\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      // apply resistance\n      this.vel.x *= this.resistance;\n      this.vel.y *= this.resistance; // gravity down\n\n      this.vel.y += this.gravity; // update position based on speed\n\n      this.x += this.vel.x;\n      this.y += this.vel.y; // shrink\n\n      this.size *= this.shrink; // fade out\n\n      this.alpha -= this.fade;\n    }\n  }, {\n    key: \"render\",\n    value: function render(c) {\n      if (!this.exists()) {\n        return;\n      }\n\n      c.save();\n      c.globalCompositeOperation = 'lighter';\n      var _ref = [this.x, this.y, this.size],\n          x = _ref[0],\n          y = _ref[1],\n          size = _ref[2];\n      var gradient = c.createRadialGradient(x, y, 0.1, x, y, size / 2);\n      gradient.addColorStop(0.1, \"rgba(255,255,255,\" + this.alpha + \")\");\n      gradient.addColorStop(0.8, \"hsla(\" + this.color + \", 100%, 50%, \" + this.alpha + \")\");\n      gradient.addColorStop(1, \"hsla(\" + this.color + \", 100%, 50%, 0.1)\");\n      c.fillStyle = gradient;\n      c.beginPath();\n      c.arc(x, y, this.flick ? Math.random() * size : size, 0, Math.PI * 2, true);\n      c.closePath();\n      c.fill();\n      c.restore();\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return this.alpha >= 0.1 && this.size >= 1;\n    }\n  }]);\n\n  return Particle;\n}();\n\nexports.default = Particle;","map":null,"metadata":{},"sourceType":"script"}